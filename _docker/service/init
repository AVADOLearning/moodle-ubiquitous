#!/bin/bash

#
# Ubiquitous Moodle
#
# @author Luke Carrier <luke@carrier.im>
# @copyright 2018 The Ubiquitous Authors
#

docker build _docker/ubuntu-python -t ubiquitous/ubuntu-python:16.04

containers=(
    ubiquitous/moodle-build:admin,moodle-componentmgr,nvm

    ubiquitous/moodle-web:admin,web-moodle,web-moodle-default-release:salt://web-base/macros.sls
    ubiquitous/moodle-web-debug:admin,web-moodle,web-moodle-debug,web-moodle-default-release:salt://web-base/macros.sls
    ubiquitous/moodle-app:admin,app-moodle,app-moodle-default-release:salt://app-base/macros.sls
    ubiquitous/moodle-app-debug:admin,app-moodle,app-moodle-debug,app-moodle-default-release:salt://app-base/macros.sls

    ubiquitous/postgresql:admin,postgresql

    ubiquitous/selenium-hub:admin,selenium-hub
    ubiquitous/selenium-node-chrome:admin,selenium-node-chrome
    ubiquitous/selenium-node-firefox:admin,selenium-node-firefox
)

for line in "${containers[@]}"; do
    parts=($(echo "$line" | tr ':' "\n"))
    container="${parts[0]}"
    mods="${parts[1]}"
    extra_filerefs="${parts[2]}"
    if ! _docker/service/build -c "$container" -m "$mods" -f "$extra_filerefs"; then
        echo "failed to build container \"${container}\" with modules \"${mods}\" and extra file references \"${extra_filerefs}\"" >&2
    fi
done
