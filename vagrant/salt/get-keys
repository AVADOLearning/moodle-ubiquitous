#!/bin/sh

#
# Ubiquitous Moodle
#
# @author Luke Carrier <luke.carrier@floream.com>
# @copyright 2015 Floream Limited
#

eval set -- "$(getopt -o "air:" --long "master:,minions:,root:" -- "$@")"
while true; do
    case "$1" in
        -a|--master ) master="$2"  ; shift 2 ;;
        -i|--minions) minions="$2" ; shift 2 ;;
        -r|--root   ) root="$2"    ; shift 2 ;;
        *           ) break        ;         ;;
    esac
done

temp="$(mktemp -d)"

minion_keys='/etc/salt/pki/minion'
local_minion_keys='vagrant/salt/minions'
minion_pem='minion.pem'
minion_pub='minion.pub'

master_keys='/etc/salt/pki/master'
local_master_keys='vagrant/salt'
master_pem='master.pem'
master_pub='master.pub'

if ! vagrant scp -h &>/dev/null; then
    echo 'the vagrant-scp plugin is required; aborting' >&2
    exit
fi

if [ -n "$master" ]; then
    echo "retrieving master keys for ${master}..."

    vagrant ssh "$master" --command "sudo cp ${master_keys}/${master_pem} ${master_keys}/${master_pub} ." &>/dev/null
    vagrant ssh "$master" --command "sudo chown \$USER:\$(id -g -n \$USER) ${master_pem} ${master_pub}" &>/dev/null

    rm -f "${root}/${local_master_keys}/${master_pem}" "${root}/${local_master_keys}/${master_pub}"
    vagrant scp "${master}:${master_pem}" "${root}/${local_master_keys}"
    vagrant scp "${master}:${master_pub}" "${root}/${local_master_keys}"
fi

minions=($(echo $minions | tr "," " "))
for minion in "${minions[@]}"; do
    echo "retrieving minion keys for ${minion}..."

    vagrant ssh "$minion" --command "sudo cp ${minion_keys}/${minion_pem} ${minion_keys}/${minion_pub} ." &>/dev/null
    vagrant ssh "$minion" --command "sudo chown \$USER:\$(id -g -n \$USER) ${minion_pem} ${minion_pub}" &>/dev/null

    rm -f "${temp}/${minion_pem}" "${temp}/${minion_pub}"
    vagrant scp "${minion}:${minion_pem}" "$temp"
    vagrant scp "${minion}:${minion_pub}" "$temp"

    mv "${temp}/minion.pem" "${root}/${local_minion_keys}/${minion}.pem"
    mv "${temp}/minion.pub" "${root}/${local_minion_keys}/${minion}.pub"
done

echo "cleaning up..."
rm -rf "$temp"
