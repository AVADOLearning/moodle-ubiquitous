{% from 'web-base/macros.sls' import php_fpm_status_clients %}

{% set platform = pillar['platforms'][domain] %}
{% set ssl = 'ssl' in platform['nginx']
    and salt['file.file_exists'](platform['nginx']['ssl']['certificate'])
    and salt['file.file_exists'](platform['nginx']['ssl']['certificate_key']) %}
{% set access_log = platform['nginx']['access_log']
    | default('/var/log/nginx/' + platform['basename'] + '/access.log') %}
{% set error_log = platform['nginx']['error_log']
    | default('/var/log/nginx/' + platform['basename'] + '/error.log') %}

{%- macro lane_location(lane) %}
    location ~ {{ lane['location'] | replace('\\\\', '\\') }} {
        if ($platform_maintenance != 0) {
            return 503;
        }

{%- if 'fastcgi_read_timeout' in lane %}
        fastcgi_read_timeout {{ lane['fastcgi_read_timeout'] }};
{%- endif %}

        include snippets/fastcgi-php.conf;
        fastcgi_param SCRIPT_FILENAME $document_root$1;
{%- for parameter, value in lane.get('fastcgi_params', {}).items() %}
        fastcgi_param {{ parameter }} {{ value | json | replace('\\\\n', '\n') }};
{%- endfor %}
        fastcgi_pass {{ platform['nginx']['fastcgi_pass'] }};
    }
{%- endmacro %}

{% for source, destination in platform.get('rewrites', {}).items() %}
server {
    listen 80;
    server_name {{ source }};

    root {{ platform['user']['home'] }}/current;
    rewrite ^ $scheme://{{ destination }}$request_uri? permanent;
}
{% endfor %}

{% if ssl %}
server {
    listen 80;
    server_name {{ domain }}{% if 'aliases' in platform %} "{{ platform['aliases'] | join('" "') }}"{% endif %};

    root {{ platform['user']['home'] }}/current;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    {{ php_fpm_status_clients(domain) | indent(4) }}
}
{% endif %}

server {
    listen {{ '443 ssl' if ssl else '80' }};
    server_name {{ domain }}{% if 'aliases' in platform %} {{ platform['aliases'] | join(' ') }}{% endif %};

{% if ssl %}
    ssl on;
    ssl_certificate {{ platform['nginx']['ssl']['certificate'] }};
    ssl_certificate_key {{ platform['nginx']['ssl']['certificate_key'] }};
{% endif %}

    root {{ platform['user']['home'] }}/current;
    index index.php index.html;

    access_log {{ access_log }}{% if 'access_log_format' in platform['nginx'] %} {{ platform['nginx']['access_log_format'] }}{% endif %};
    error_log {{ error_log }} error;

    add_header X-Backend-Server $hostname;

    client_max_body_size {{ platform['nginx']['client_max_body_size'] }};

    set $platform_maintenance 0;

    include "sites-extra/{{ platform['basename'] }}.*.conf";

    {{ php_fpm_status_clients(domain) | indent(4) }}

    {{ salt['pillar.get']('maintenance:override-conditions', '') | indent(4) }}

{% if 'lanes' in platform['nginx'] -%}
{%- for lane in platform['nginx']['lanes'].values() -%}
{{ lane_location(lane) }}
{%- endfor %}
{% else %}
    location ~ ^(.+\.php)(/|$) {
        if ($platform_maintenance != 0) {
            return 503;
        }

        include snippets/fastcgi-php.conf;
        fastcgi_param SCRIPT_FILENAME $document_root$1;
        fastcgi_pass {{ platform['nginx']['fastcgi_pass'] }};
    }
{%- endif %}
}
