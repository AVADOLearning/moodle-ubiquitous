#!/bin/bash

#
# Ubiquitous Moodle
#
# @author Luke Carrier <luke@carrier.im>
# @copyright 2018 The Ubiquitous Authors
#

source=''
project_file='tests/integration/componentmgr.json'

while true; do
    case "$1" in
        -d|--domain       ) domain="$2"       ; shift 2 ;;
	-r|--release      ) release="$2"      ; shift 2 ;;
        -s|--source       ) source="$2"       ; shift 2 ;;
        -p|--project-file ) project_file="$2" ; shift 2 ;;
        *                 ) break             ;         ;;
    esac
done

set -euo pipefail
IFS=$'\n\t'
. "$(dirname "$(dirname "$(readlink -fn "$0")")")/lib/ubiquitous-core"

require_root
require_platform "$domain"
if [ -z "$release" ]; then
    abort $ERROR_PARAMS "no release name supplied"
fi
if [ ! -d "$source" ]; then
    abort "$ERROR_PARAMS" "source directory '${source}' doesn't exist"
fi

destination="${platform_releases_dir}/${release}"
if [ -d "$destination" ]; then
    echo "removing existing destination '${destination}'..."
    rm -rf "$destination"
fi

echo "preparing site from component in ${source} using project ${project_file}..."
sed -i -e "s%SOURCE_DIRECTORY%${source}%" "${source}/${project_file}"
sudo -u "$platform_user" componentmgr refresh --verbose \
        --project-file "${source}/${project_file}"
sudo -u "$platform_user" componentmgr package --verbose \
        --project-file "${source}/${project_file}" \
        --package-format Directory \
        --package-destination "$destination"
"$platform_install_config_script" --domain "$domain" --destination "$destination"

echo "fixing ownership..."
chown -R "${platform_user}:${platform_user}" "$destination"

echo "fixing permissions..."
find "$destination" -type d -exec chmod 0770 {} \;
find "$destination" -type f -exec chmod 0660 {} \;
